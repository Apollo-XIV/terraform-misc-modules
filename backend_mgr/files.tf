resource "local_file" "backend" {
  filename = "${var.output_dir}/backend.tf"
  content  = <<-EOF

            ##############################################
            ## THIS FILE IS AUTOGENERATED,  DO NOT EDIT ##
            ## -- EDIT BACKEND MODULE INPUTS INSTEAD -- ##
            ##############################################

    terraform {
      required_version = "${var.required_version}"
      required_providers ${indent(2, provider::terraform::encode_expr({ for k, v in var.required_providers : k => v }))}        
      
      backend "s3" {
        bucket = "${local.bucket_name}"
        key    = "${local.bucket_key}"
        region = "eu-west-1"

        dynamodb_table = "${local.dynamodb_table_arn}"
        encrypt        = true
        assume_role = {
          role_arn = "${local.role_arn}"
          session_name = "${var.prefix}-iac"
        }
      }
    }
  EOF
}

locals {
  env = try(yamldecode(file("${var.environment_configs_dir}/${var.ENV}-environment.yaml")), {})
}

resource "local_file" "vars_tf" {
  count    = length(var.variables) == 0 ? 0 : 1
  filename = "${path.root}/env_vars.tf.json"
  content = jsonencode({
    variable = {
      for key, var in var.variables : key => {
        description = "Autogenerated environment variable"
        type        = var
      }
    }
  })
}

resource "local_file" "environment_tfvars" {
  count    = length(var.variables) == 0 ? 0 : 1
  filename = "${path.root}/environment.auto.tfvars"
  content = provider::terraform::encode_tfvars({
    for key, var in var.variables : key => local.env[key]
  })
}
